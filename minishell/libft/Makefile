SRCS = 	ft_strlen.c \
		ft_strlcpy.c \
		ft_strlcat.c \
		ft_strchr.c \
		ft_strrchr.c \
		ft_memset.c \
 		ft_strncmp.c \
 		ft_memcpy.c \
 		ft_memchr.c \
 		ft_memmove.c \
 		ft_memcmp.c \
 		ft_atoi.c \
 		ft_isalpha.c \
 		ft_isdigit.c \
 		ft_isalnum.c \
 		ft_isascii.c \
 		ft_isprint.c \
		ft_isspace.c \
 		ft_toupper.c \
 		ft_tolower.c \
		ft_calloc.c \
		ft_substr.c \
		ft_bzero.c \
		ft_strdup.c \
		ft_strnstr.c \
		ft_strjoin.c \
		ft_strtrim.c \
		ft_split.c \
		ft_itoa.c \
		ft_strmapi.c \
		ft_striteri.c\
		ft_putchar_fd.c \
		ft_putstr_fd.c \
		ft_putendl_fd.c \
		ft_putnbr_fd.c \
		ft_printf/ft_putchar.c \
		ft_printf/ft_putnbr.c \
		ft_printf/ft_putstr.c \
		ft_printf/ft_printchar.c \
		ft_printf/ft_print_int.c \
		ft_printf/ft_print_uint.c \
		ft_printf/ft_printstring.c \
		ft_printf/ft_print_address.c \
		ft_printf/ft_print_lowerhexa.c \
		ft_printf/ft_print_upperhexa.c \
		ft_printf/ft_printf.c \
		ft_lstnew.c \
		ft_lstadd_front.c \
		ft_lstsize.c \
		ft_lstlast.c \
		ft_lstadd_back.c \
	 	ft_lstdelone.c \
	 	ft_lstclear.c \
	 	ft_lstiter.c \
	 	ft_lstmap.c

OBJS = $(SRCS:.c=.o)

NAME = libft.a
LIBC = ar rc
LIBR = ranlib
CC = cc
RM = rm -f
CFLAGS = -Wall -Wextra -Werror -I$(INCL)

INCL = inc

all: $(NAME)

$(NAME): $(OBJS)
	$(LIBC) $@ $(OBJS)
	$(LIBR) $@

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	$(RM) $(OBJS)

fclean: clean
	$(RM) $(NAME)

bonus:
	$(MAKE) all WITH_BONUS=1

re: fclean all

.PHONY: all clean fclean re bonus